<?xml version="1.0" encoding="utf-8"?>
<launch>

  <arg name="type" default="quad" />
  <arg name="transformation" default="true" />
  <arg name="load_path_flag" default="true" />
  <arg name="save_path_flag" default="true" />
  <arg name="play_path_flag" default="false" />
  <arg name="replay_flag" default="false" />
  <arg name="path_file_name" default="hydrus_planning_log.txt" />

  <arg name="path_tf_debug" default= "false" />

  ###########  Robot Model  ###########
  <group if="$(arg play_path_flag)">
    <include file="$(find hydrus)/launch/robot_model.launch" >
      <arg name="model" value="hydrusx"/>
      <arg name="type" value="$(arg type)" />
      <arg name="headless" value="true" />
      <arg name="need_joint_state" value="false"/>
      <arg name="node_suffix" value="planning"/>
    </include >

    <node name="rviz" pkg="rviz" type="rviz"
          args="-d $(find gap_passing)/config/planning.rviz" respawn="true" />
  </group>

  ########## Planning for gap passing ###########
  <param name="/robot_description_semantic" textfile="$(find gap_passing)/config/hydrusx/$(arg type)/moveit.srdf" />

  <node name="motion_planning_node" pkg="gap_passing" type="se2_motion_planning_node" respawn="false" output="screen">
    <param name="play_path_flag" type="bool" value="$(arg play_path_flag)"/>
    <param name="save_path_flag" type="bool" value="$(arg save_path_flag)" />
    <param name="load_path_flag" type="bool" value="$(arg load_path_flag)" />

    <param name="file_name" value="$(find gap_passing)/path_log/hydrus/$(arg path_file_name)" />

    <param name="coefficient_rate" value="0.05"/>
    <param name="planning_mode" value="1" unless="$(arg transformation)"/>
    <param name="planning_mode" value="2" if="$(arg transformation)"/>
    <param name="motion_sequence_rate" value="10"/>
    <param name="ompl_mode" value="0"/> <!-- RRT START:0 -->

    <param name="state_validity_check_res" value="0.005"/>
    <param name="valid_segment_count_factor" value="20"/> <!--20-->

    <param name="solving_time_limit" type="double" value="3600"/>

    <param name="file_state_offset_x" type="double" value="0.0" />
    <param name="file_state_offset_y" type="double" value="0.0" />
    <param name="joint_state_topic_name" value="hydrusx/joint_states" />
    <param name="path_tf_debug" value="$(arg path_tf_debug)" />

    <!-- for specific param -->
    <rosparam file="$(find hydrus)/config/hydrusx/$(arg type)/Hydrus.yaml" command="load" />
    <rosparam file="$(find gap_passing)/config/hydrusx/$(arg type)/GapWithTransformation.yaml" command="load" if="$(arg transformation)"/>
    <rosparam file="$(find gap_passing)/config/hydrusx/$(arg type)/GapWithoutTransformation.yaml" command="load" unless="$(arg transformation)"/>
    <rosparam file="$(find gap_passing)/config/gap/HorizontalGapNoOverlap.yaml" command="load" />
  </node>

  ###########  Aerial trajectory  ###########
  <group unless="$(arg replay_flag)">
    <include file="$(find bspline_generator)/launch/aerial_trajectory_plannar.launch" >
      <arg name="joint_control_topic_name" value = "/hydrusx/joints_ctrl" />
    </include>
  </group>

  ######### Debug ##################
  <group if="$(arg path_tf_debug)" >
    <node pkg="hydrus" type="transform_control_node" name="hydrusx"  output="screen" respawn="true">
      <rosparam file="$(find hydrus)/config/hydrusx/$(arg type)/Hydrus.yaml" command="load" />
      <param name="kinematic_verbose" value="false" />
      <param name="control_verbose" value="false" />
      <param name="debug_verbose" value="false" />
    </node>
  </group>
</launch>
